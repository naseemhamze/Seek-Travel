<% layout('layouts/boilerplate')%>
<style>
    @import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap");

* {
padding: 0;
margin: 0;
box-sizing: border-box;

}

body {

height: 100vh;
font-family: Poppins, sans-serif;

}

h1 {
font-weight: 600;
text-align: center;
color: #fff;
margin-bottom: 2rem;
}

h3 {
font-weight: 600;
}

.calendar {
margin: auto;
width: 98%;
max-width: 380px;
padding: 1rem;
background: #fff;
border-radius: 10px;
box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
display: none; /* Initially hide the calendar */
transition: opacity 0.3s ease-in-out; /* Add transition for opacity */
display: block; /* Show the calendar */

}



.calendar header {
display: flex;
align-items: center;
justify-content: space-between;
}

.calendar nav {
display: flex;
}

.calendar ul {
list-style: none;
display: flex;
flex-wrap: wrap;
text-align: center;
}

.calendar ul li {
width: calc(100% / 7);
margin-top: 25px;
position: relative;
z-index: 2;
}

#prev,
#next {
width: 20px;
height: 20px;
position: relative;
border: none;
background: transparent;
cursor: pointer;
}

#prev::before,
#next::before {
content: "";
width: 50%;
height: 50%;
position: absolute;
top: 50%;
left: 50%;
border-style: solid;
border-width: 0.25em 0.25em 0 0;
border-color: #ccc;
}

#next::before {
transform: translate(-50%, -50%) rotate(45deg);
}

#prev::before {
transform: translate(-50%, -50%) rotate(-135deg);
}

#prev:hover::before,
#next:hover::before {
border-color: #000;
}

.days {
font-weight: 600;
}

.dates li.today {
color: #fff;
}

.dates li.today::before {
content: "";
width: 2rem;
height: 2rem;
position: absolute;
top: 50%;
left: 50%;
transform: translate(-50%, -50%);
background: #000;
border-radius: 50%;
z-index: -1;
}

.dates li.inactive {
color: #ccc;
}

.button-item {
cursor: pointer;
transition: background-color 0.3s;
}

.button-item:hover {
background-color: #0056b3;
color: white;
}

.button-item:active {
background-color: #003f7f;
color: white;
}


</style>
<div style="color: #000;" class="row">
    <div class="col-4">
      <div class="card mb-3">
        <img src="https://images.pexels.com/photos/189296/pexels-photo-189296.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1" class="card-img-top" alt="...">
        <div class="card-body">
            <h5 class="card-title"><%= room.type %>%></h5>
            <p class="card-text"><%= room.description%></p>
        </div>
        <ul class="list-group list-group-flush"> 
          <li class="list-group-item text-muted"><%= hotel.location%></li>

        </ul>
        <li class="list-group-item">Price: <%= room.price%>$ a night</li>

        <div class="card-footer text-muted">
          2 days ago
      </div>

    </div>
    </div>
<div style="color: #000;" class="col-4">
      <h1 style="color: #000000;">Calendar</h1>
      <div class="calendar">
        <header>
            <h3 id="cuurentMonth"></h3>
            <nav>
                <button id="prev"></button>
                <button id="next"></button>
            </nav>
        </header>
        <section>
            <ul class="days">
                <li >Sun</li>
                <li >Mon</li>
                <li >Tue</li>
                <li >Wed</li>
                <li >Thu</li>
                <li >Fri</li>
                <li>Sat</li>
            </ul>
            <ul class="dates"></ul>
        </section>

</div>
</div>
<div style="color: #000;" class="col-4 mt-5">
  <div class="card mt-5" style="width: 18rem;">
    <div class="card-body">
      <h5 class="card-title">Check In Date </h5>
      <p class="card-text" id="checkInDate"></p>
    </div>
  </div>
  <div class="card mt-5" style="width: 18rem;">
    <div class="card-body">
      <h5 class="card-title ">Check Out Date </h5>
      <p class= "card-text" id="checkOutDate"></p>
    </div>
  </div>

  <button onclick="Resetfunc()" type="button" class="btn btn-primary mt-5">Reset</button>


</div>
</div>
    
<script>

    const header = document.querySelector(".calendar h3");
    const dates = document.querySelector(".dates");
    const navs = document.querySelectorAll("#prev, #next");
    
    const months = [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December",
    ];
    
    let date = new Date();
    let month = date.getMonth();
    let year = date.getFullYear();
    
    function renderCalendar() {
    const start = new Date(year, month, 1).getDay();
    const endDate = new Date(year, month + 1, 0).getDate();
    const end = new Date(year, month, endDate).getDay();
    const endDatePrev = new Date(year, month, 0).getDate();
    
    let datesHtml = "";
    
    for (let i = start; i > 0; i--) {
    datesHtml += `<li class="inactive">${endDatePrev - i + 1}</li>`;
    }
    
    for (let i = 1; i <= endDate; i++) {
    let className =
      i === date.getDate() &&
      month === new Date().getMonth() &&
      year === new Date().getFullYear()
        ? ' class="today"'
        : ` class="button-item" id="my${i}"  data-action="${i}"`;
    datesHtml += `<li${className}>${i}</li>`;
    }
    
    for (let i = end; i < 6; i++) {
    datesHtml += `<li class="inactive">${i - end + 1}</li>`;
    }
    
    dates.innerHTML = datesHtml;
    header.textContent = `${months[month]} ${year}`;
    
    // Re-attach click event listeners to new button items
    const buttonItems = document.querySelectorAll(".button-item");
    
    buttonItems.forEach((item) => {
    item.addEventListener("click", function () {
      const action = this.getAttribute("data-action");
      handleButtonClick(action);
    });
    });
    }
    let arr=[]

    function handleButtonClick(action) {
      const dateDay=action

      if (arr.length<1){
        const btn=document.getElementById(`my${action}`)
        btn.style.backgroundColor="#0056b3"
        btn.style.color="white"

        arr.push(action)
      }
      else{

        for (let i=parseInt(arr[0]);i<parseInt(action)+1;i++){
          const btn=document.getElementById(`my${i}`)
          btn.style.backgroundColor="#0056b3"
          btn.style.color="white"
          arr.push(i)

        }
      }
      const mymonth = document.getElementById("cuurentMonth")
      const checkInDate = document.getElementById("checkInDate")
      const checkOutDate = document.getElementById("checkOutDate")
      Datee=dateDay + " " + mymonth.textContent
      if (checkInDate.textContent=="") {
      checkInDate.textContent=(Datee)

        }
      else{
        checkOutDate.textContent=(Datee)

      }
      console.log(arr)
    }
    
    function Resetfunc(){
      arr=[]
      const checkInDate = document.getElementById("checkInDate")
      const checkOutDate = document.getElementById("checkOutDate")
      checkInDate.textContent=""
      checkOutDate.textContent=""
      
      for (let i=0;i<30;i++){
          const btn=document.getElementById(`my${i}`)
          if (btn !== null) {
            const computedStyle = window.getComputedStyle(btn);
            const backgroundColor = computedStyle.backgroundColor;
            if(backgroundColor=='rgb(0, 86, 179)'){
              btn.style.backgroundColor = 'white';
              btn.style.color = 'black';

            }

    // btn exists
        } else {
          // btn does not exist
           console.log("btn does not exist.");
}


        }
      

    }
    
    navs.forEach((nav) => {
    nav.addEventListener("click", (e) => {
    const btnId = e.target.id;
    
    if (btnId === "prev" && month === 0) {
      year--;
      month = 11;
    } else if (btnId === "next" && month === 11) {
      year++;
      month = 0;
    } else {
      month = btnId === "next" ? month + 1 : month - 1;
    }
    
    renderCalendar();
    });
    });
   
    
    document.addEventListener("DOMContentLoaded", renderCalendar);
    

    
    </script>
